<templateSet group="AndroidTristanCompose">
  <template name="and_compose_swipeable_tab_rows" value="// TODO: Add the following to the import section.&#10;// import androidx.compose.runtime.getValue&#10;// import androidx.compose.runtime.setValue&#10;// import androidx.compose.foundation.layout.fillMaxSize&#10;// import androidx.compose.material.icons.filled.AccountCircle&#10;// import androidx.compose.material.icons.filled.Home&#10;// import androidx.compose.material.icons.filled.ShoppingCart&#10;// import androidx.compose.material.icons.outlined.AccountCircle&#10;// import androidx.compose.material.icons.outlined.Home&#10;// import androidx.compose.material.icons.outlined.ShoppingCart&#10;&#10;data class TabItem(&#10;    val title: String,&#10;    val unselectedIcon: androidx.compose.ui.graphics.vector.ImageVector,&#10;    val selectedIcon: ImageVector,&#10;)&#10;&#10;// Source: https://www.youtube.com/watch?v=9r4st6dmyNE&#10;@OptIn(androidx.compose.foundation.ExperimentalFoundationApi::class) // To be able to use: rememberPagerState&#10;@androidx.compose.runtime.Composable&#10;fun ScreenSwipeableTabRows(modifier: androidx.compose.ui.Modifier = Modifier) {&#10;&#10;    val tabItems = listOf(&#10;        TabItem(&#10;            title = &quot;Home&quot;,&#10;            unselectedIcon = androidx.compose.material.icons.Icons.Outlined.Home,&#10;            selectedIcon = Icons.Filled.Home,&#10;        ),&#10;        TabItem(&#10;            title = &quot;Browse&quot;,&#10;            unselectedIcon = Icons.Outlined.ShoppingCart,&#10;            selectedIcon = Icons.Filled.ShoppingCart,&#10;        ),&#10;        TabItem(&#10;            title = &quot;Account&quot;,&#10;            unselectedIcon = Icons.Outlined.AccountCircle,&#10;            selectedIcon = Icons.Filled.AccountCircle,&#10;        ),&#10;    )&#10;&#10;    // https://mvnrepository.com/artifact/androidx.compose.material/material-icons-extended-android&#10;    // implementation 'androidx.compose.material:material-icons-extended-android:1.5.4'&#10;&#10;    var selectedTabIndex by androidx.compose.runtime.saveable.rememberSaveable { androidx.compose.runtime.mutableIntStateOf(0) }&#10;    // Error: Type 'PagerState' has no method 'getValue(Nothing?, KProperty&lt;*&gt;)' and thus it cannot serve as a delegate&#10;    // Solution: do not use by, but simply the =&#10;    val pagerState = androidx.compose.foundation.pager.rememberPagerState(pageCount = {&#10;        tabItems.size&#10;    })&#10;&#10;    androidx.compose.runtime.LaunchedEffect(key1 = selectedTabIndex, block = {pagerState.animateScrollToPage(selectedTabIndex)})&#10;    LaunchedEffect(key1 = pagerState.currentPage, key2 = pagerState.isScrollInProgress, block = {&#10;        if( !pagerState.isScrollInProgress){&#10;            selectedTabIndex = pagerState.currentPage&#10;        }&#10;    })&#10;&#10;    androidx.compose.foundation.layout.Column(&#10;        modifier = modifier.fillMaxSize(1f)&#10;    ) {&#10;        // If more than 3 items int the list, then use ScrollableTabRow instead of TabRow&#10;        // ScrollableTabRow(selectedTabIndex = selectedTabIndex) {&#10;        androidx.compose.material3.TabRow(selectedTabIndex = selectedTabIndex) {&#10;            tabItems.forEachIndexed { index, item: TabItem -&gt;&#10;                androidx.compose.material3.Tab(selected = index == selectedTabIndex, onClick = { selectedTabIndex = index }, text = { androidx.compose.material3.Text(text = item.title) }, icon = {&#10;                    androidx.compose.material3.Icon(&#10;                        imageVector = if (index == selectedTabIndex) {&#10;                            item.selectedIcon&#10;                        } else {&#10;                            item.unselectedIcon&#10;                        }, contentDescription = item.title&#10;                    )&#10;                })&#10;            }&#10;        }&#10;        androidx.compose.foundation.pager.HorizontalPager(&#10;            state = pagerState, modifier = Modifier&#10;                .fillMaxSize(1f)&#10;                .weight(1f)&#10;        ) { index -&gt;&#10;            androidx.compose.foundation.layout.Box(modifier = Modifier.fillMaxSize(1f), contentAlignment = androidx.compose.ui.Alignment.Center) {&#10;                Text(text = tabItems[index].title)&#10;            }&#10;        }&#10;    }&#10;}" description="Write a composable that display a Tab Row that can be swiped." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
</templateSet>